# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-26 20:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorial/tutorial-5/iOS.rst:3
msgid "Tutorial 5 - Taking it mobile: iOS"
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:5
msgid ""
"Now, we're going to take our application, and deploy it as an iOS "
"application."
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:7
msgid ""
"The process of deploying an application to iOS is very similar to the "
"process for deploying as a desktop application. First, you run the "
"``create`` command - but this time, we specify that we want to create an "
"iOS application:"
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:28
msgid ""
"Once this completes, we'll now have an ``iOS`` directory in your project."
" This directory will contain a ``Hello World`` folder, which will contain"
" an Xcode project, as well as the support libraries and the application "
"code needed for the application."
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:33
msgid ""
"You can then use Briefcase to compile your app using the ``build`` "
"command. You'll be prompted to select a device to compile for; if you've "
"got simulators for multiple iOS versions installed, you may also be asked"
" which iOS version you want to target. The options you are shown may "
"differ from the options show in this output; for our purposes, it doesn't"
" matter which simulator you pick."
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:74
msgid ""
"We're now ready to run our application. You could do this by running "
"``briefcase run iOS``. If you run Briefcase in that way, you'll be asked "
"again for the device you want to target. If you already know the devices "
"that are available, you can tell briefcase to use that simulator by "
"providing a ``-d`` (or ``--device``) option. Using the name of the device"
" you selected when you built your application, run::"
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:83
msgid ""
"If you have multiple iPhone 11 simulators, briefcase will pick the "
"highest iOS version; if you want to pick a particular iOS version, you "
"tell it to use that specific version::"
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:89
msgid "Or, you can name a specific device UDID::"
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:93
msgid ""
"This will start the iOS simulator, install your app, and start it. You "
"should see the simulator start, and eventually open your iOS application:"
msgstr ""

msgid "Hello World Tutorial 5 window, on iOS"
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:100
msgid "Next steps"
msgstr ""

#: ../../tutorial/tutorial-5/iOS.rst:102
msgid ""
"We've now got an application on our phone! However, this app is fairly "
"simple, and doesn't involve any third-party libraries. Can we include "
"libraries from the Python Package Index (PyPI) in our app? Turn to "
":doc:`Tutorial 6 <../tutorial-6>` to find out..."
msgstr ""

