# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-26 20:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorial/tutorial-5/android.rst:3
msgid "Tutorial 5 - Taking it mobile: Android"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:5
msgid ""
"Now, we're going to take our application, and deploy it as an Android "
"application."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:8
msgid ""
"The process of deploying an application to Android is very similar to the"
" process for deploying as a desktop application. Briefcase handles "
"installing dependencies for Android, including the Android SDK, the "
"Android emulator, and a Java compiler."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:14
msgid "Create an Android app and compile it"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:16
msgid ""
"First, run the ``create`` command. This downloads an Android app template"
" and adds your Python code to it."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:21
#: ../../tutorial/tutorial-5/android.rst:94
#: ../../tutorial/tutorial-5/android.rst:153
#: ../../tutorial/tutorial-5/android.rst:253
#: ../../tutorial/tutorial-5/android.rst:303
msgid "macOS"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:40
#: ../../tutorial/tutorial-5/android.rst:106
#: ../../tutorial/tutorial-5/android.rst:165
#: ../../tutorial/tutorial-5/android.rst:267
#: ../../tutorial/tutorial-5/android.rst:317
msgid "Linux"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:59
#: ../../tutorial/tutorial-5/android.rst:118
#: ../../tutorial/tutorial-5/android.rst:177
#: ../../tutorial/tutorial-5/android.rst:281
#: ../../tutorial/tutorial-5/android.rst:331
msgid "Windows"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:78
msgid ""
"When you run ``briefcase create android`` for the first time, Briefcase "
"downloads a Java JDK, and the Android SDK. File sizes and download times "
"can be considerable; this may take a while (10 minutes or longer, "
"depending on the speed of your Internet connection). When the download "
"has completed, you will be prompted to accept Google's Android SDK "
"license."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:84
msgid ""
"Once this completes, we'll now have an ``android`` directory in our "
"project. This directory will contain a ``Hello World`` folder, which will"
" contain an Android project with a Gradle build configuration. This "
"project will contain your application code, and a support package "
"containing the Python interpreter."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:89
msgid ""
"We can then use Briefcase's ``build`` command to compile this into an "
"Android APK app file."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:130
msgid "Gradle may look stuck"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:132
msgid ""
"During the ``briefcase build android`` step, Gradle (the Android platform"
" build tool) will print ``CONFIGURING: 100%``, and appear to be doing "
"nothing. Don't worry, it's not stuck - it's downloading more Android SDK "
"components. Depending on your Internet connection speed, this may take "
"another 10 minutes (or longer). This lag should only happen the very "
"first time you run ``build``; the tools are cached, and on your next "
"build, the cached versions will be used."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:141
msgid "Run the app on a virtual device"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:143
msgid ""
"We're now ready to run our application. You can use Briefcase's ``run`` "
"command to run the app on an Android device. Let's start by running on an"
" Android emulator."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:147
msgid ""
"To run your application, run ``briefcase run android``. When you do this,"
" you'll be prompted with a list of devices that you could run the app on."
" The last item will always be an option to create a new Android emulator."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:189
msgid ""
"We can now choose our desired device. Select the \"Create a new Android "
"emulator\" option, and accept the default choice for the device name "
"(``beePhone``)."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:193
msgid ""
"Briefcase ``run`` will automatically boot the virtual device. When the "
"device is booting, you will see the Android logo:"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:201
msgid "Android virtual device booting"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:203
msgid ""
"Once the device has finished booting, Briefcase will install your app on "
"the device. You will briefly see a launcher screen:"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:211
msgid "Android virtual device fully started, on the launcher screen"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:213
msgid ""
"The app will then start. You'll see a splash screen while the app starts "
"up:"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:220
msgid "App splash screen"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:222
msgid ""
"The first time the app starts, it needs to unpack itself onto the device."
" This may take a few seconds. Once it's unpacked, you'll see the Android "
"version of our desktop app:"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:231
msgid "App from Tutorial 2, fully launched"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:231
msgid "Demo app fully launched"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:233
msgid ""
"If you fail to see your app launching, you may need to check your "
"terminal where you ran ``briefcase run`` and look for any error messages."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:236
msgid ""
"In future, if you want to run on this device without using the menu, you "
"can provide the emulator's name to Briefcase, using ``briefcase run "
"android -d @beePhone`` to run on the virtual device directly."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:241
msgid "Run the app on a physical device"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:243
msgid ""
"If you have a physical Android phone or tablet, you can connect it to "
"your computer with a USB cable, and then use the Briefcase to target your"
" physical device."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:247
msgid ""
"If Briefcase can detect the device, it will appear in the ``run`` output."
" The first time you use a device for development, it may report itself as"
" an \"Unknown device (not authorized for development)\":"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:295
msgid ""
"Android requires that devices be placed into \"developer\" mode before "
"you can load an app onto the device. Select the \"unknown\" device, and "
"you'll be shown a link that shows you how to enable developer mode."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:299
msgid ""
"Once developer mode has been enabled you can re-run ``briefcase run "
"android``:"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:345
msgid ""
"This time, we get the name of the device, and it's serial number (in this"
" case, a Pixel 3a)."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:348
msgid ""
"In the future, if you want to run on this device without using the menu, "
"you can provide the phones's serial number to Briefcase, using "
"``briefcase run android -d 94ZZY0LNE8``. Thi will run on the device "
"directly, wthout prompting."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:354
msgid ""
"When youâ€™re developing for Android, it's useful to be able to view the "
"Android logs. To view the Android logs without the background noise from "
"the rest of the system, you can run ``adb logcat -s MainActivity:* "
"stdio:* Python:*``. Anything your app writes to stdout (e.g., the output "
"of ``print()`` statements) will be visible in the logs."
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:361
msgid "Next steps"
msgstr ""

#: ../../tutorial/tutorial-5/android.rst:363
msgid ""
"We've now got an application on our phone! However, this app is fairly "
"simple, and doesn't involve any third-party libraries. Can we include "
"libraries from the Python Package Index (PyPI) in our app? Turn to "
":doc:`Tutorial 6 <../tutorial-6>` to find out..."
msgstr ""

